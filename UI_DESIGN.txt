"""
西安地铁路线规划器 - UI布局说明
===============================================

基于 PyQt-Fluent-Widgets 的界面布局：

┌────────────────────────────────────────────────────────────────────────┐
│  西安地铁路线规划                                           [_][□][X]   │
├────────────────────────────────────────────────────────────────────────┤
│                                                                        │
│    请输入起点和终点（支持站名或站点ID）                                    │
│                                                                        │
│    起点：  [________________________起点站名或站点ID_______________]      │
│                                                                        │
│    终点：  [________________________终点站名或站点ID_______________]      │
│                                                                        │
│                        [ 开始规划 ]                                      │
│                                                                        │
├────────────────────────────────────────────────────────────────────────┤
│                                                                        │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐                │
│  │  最少换乘    │  │  最少站点    │  │  最短距离    │                │
│  ├──────────────┤  ├──────────────┤  ├──────────────┤                │
│  │ 1号线：     │  │ 2号线：     │  │ 3号线：     │                │
│  │ 钟楼 -> 小  │  │ 北大街 ->   │  │ 凤城五路 -> │                │
│  │ 寨 -> 大雁  │  │ 钟楼 -> 永  │  │ 市图书馆 -> │                │
│  │ 塔          │  │ 宁门 -> 航  │  │ 大雁塔      │                │
│  │             │  │ 天大道      │  │             │                │
│  │ 总站点数: 5 │  │ 总站点数: 4 │  │ 总站点数: 6 │                │
│  │ 总距离:8.2km│  │ 总距离:6.5km│  │ 总距离:5.8km│                │
│  │ 换乘次数: 1 │  │ 换乘次数: 2 │  │ 换乘次数: 1 │                │
│  │             │  │             │  │             │                │
│  │             │  │             │  │             │                │
│  └──────────────┘  └──────────────┘  └──────────────┘                │
│                                                                        │
└────────────────────────────────────────────────────────────────────────┘

UI 组件说明：
============

1. 输入区域（上半部分）：
   - 标题文字：说明支持的输入格式
   - 起点输入框 (LineEdit)：带提示文字的文本输入框
   - 终点输入框 (LineEdit)：带提示文字的文本输入框
   - 开始规划按钮 (PushButton)：居中显示，点击触发路线规划

2. 结果显示区域（下半部分）：
   - 三个并排的 ListWidget，分别显示三种策略的结果
   - 每个列表上方有策略名称标签
   - 列表中显示：
     * 每段乘车路线（线路名：站点1 -> 站点2 -> ...）
     * 空行
     * 统计信息（总站点数、总距离、换乘次数）

3. 交互流程：
   Step 1: 用户输入起点和终点（站名或站点ID）
   Step 2: 点击"开始规划"按钮
   Step 3: 系统验证输入有效性
           - 无效：弹出警告对话框
           - 有效：继续执行
   Step 4: 调用 plan_route 分别规划三种策略的路线
   Step 5: 格式化结果并显示在三个列表中
   Step 6: 如果规划过程出错，弹出错误对话框

4. 错误处理：
   - 起点/终点不存在：弹出警告对话框
   - 数据加载失败：弹出错误对话框
   - 路线规划失败：弹出错误对话框

5. Fluent Design 特性：
   - 使用 PyQt-Fluent-Widgets 提供的现代化控件
   - FluentWindow 作为主窗口
   - LineEdit、PushButton、ListWidget 使用 Fluent 样式
   - 自动适配明暗主题
   - 流畅的动画效果

技术实现细节：
==============

1. MetroPlannerUI (style_ui.py)
   - 基类，继承自 FluentWindow
   - 定义界面布局和控件
   - 不包含业务逻辑

2. MetroPlannerApp (main.py)
   - 应用类，继承自 MetroPlannerUI
   - 实现业务逻辑：
     * 数据加载 (load_stations)
     * 输入验证 (validate_station)
     * 结果格式化 (format_route_result)
     * 事件处理 (on_plan_clicked)

3. main() 函数
   - 程序入口
   - 创建 QApplication 实例
   - 创建并显示主窗口
   - 运行事件循环

依赖要求：
==========
- PyQt5: 提供基础 GUI 框架
- PyQt-Fluent-Widgets: 提供 Fluent Design 风格的控件
- xianmetro.core: 提供路线规划核心功能
- xianmetro.fetch: 提供数据获取功能
"""
